[workspace]
members = [
  "crates/runtime-impl",
  "crates/runtime-interface",
  "crates/types",
  "crates/recursive-proof",
]

resolver = "3"

[workspace.dependencies]
moho-runtime-impl = { path = "crates/runtime-impl" }
moho-runtime-interface = { path = "crates/runtime-interface" }
moho-types = { path = "crates/types" }

strata-merkle = { git = "https://github.com/alpenlabs/strata-common", branch = "feat/generic-merkle", features = [
  "borsh",
] }
strata-predicate = { git = "https://github.com/alpenlabs/strata-common" }

borsh = { version = "1.5.7", features = ["derive"] }
hex = { version = "0.4" }
sha2 = { version = "0.10.9" }
thiserror = { version = "2" }
zkaleido = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc17" }
zkaleido-native-adapter = { git = "https://github.com/alpenlabs/zkaleido", tag = "v0.1.0-alpha-rc17" }

ssz = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }
ssz_codegen = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }
ssz_derive = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }
ssz_types = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }
tree_hash = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }
tree_hash_derive = { git = "https://github.com/alpenlabs/ssz-gen", branch = "STR-1810-docstring-support" }

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_crate_dependencies = "deny"
rust.unused_must_use = "deny"
rust.unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage, coverage_nightly)',
] }
rust.missing_docs = "warn"
rustdoc.all = "warn"

[profile.release]
opt-level = 3     # Optimized for size, use 3 for speed
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduced to increase optimizations
panic = "abort"   # Abort on panic
strip = "symbols" # Strip symbols from binary
